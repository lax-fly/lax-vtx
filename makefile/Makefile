##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.19.2] date: [Sat Sep 02 18:56:37 CST 2023] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = at32f421
MCU_FLY = AT32F421x8

#######################################
# download script
#######################################
DOWNLOAD_SCRIP = "../script/jlink-download.sh"

#######################################
# link script
#######################################

LDSCRIPT := ../startup/gcc/linker/$(MCU_FLY)_flash.ld

######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build output directory
BUILD_DIR = build

######################################
# source
######################################
VTX_LAYER_DIR = ../src/vtx
BSP_LAYER_DIR = ../src/driver/bsp
CHIP_LAYER_DIR = ../src/driver/chip
MSP_LAYER_DIR = ../src/driver/msp
MCU_LAYER_DIR = ../src/driver/msp/at32f421

VTX_LAYER_INCLUDE  = $(VTX_LAYER_DIR)  $(BSP_LAYER_DIR)
BSP_LAYER_INCLUDE  = $(BSP_LAYER_DIR)  $(CHIP_LAYER_DIR) $(MSP_LAYER_DIR)
CHIP_LAYER_INCLUDE = $(CHIP_LAYER_DIR) $(MSP_LAYER_DIR)
MSP_LAYER_INCLUDE  = $(MSP_LAYER_DIR)  $(MCU_LAYER_INCLUDE)
MCU_LAYER_INCLUDE  = $(MCU_LAYER_DIR) ../src/driver/msp/cm4
COMMON_INCLUDE = ../src/utilities

SOURCES_DIR = $(VTX_LAYER_DIR) $(BSP_LAYER_DIR) $(CHIP_LAYER_DIR) $(MSP_LAYER_DIR) $(MCU_LAYER_DIR)

VTX_LAYER_SRC  = $(wildcard $(VTX_LAYER_DIR)/*.cpp)
BSP_LAYER_SRC  = $(wildcard $(BSP_LAYER_DIR)/*.cpp)
CHIP_LAYER_SRC = $(wildcard $(CHIP_LAYER_DIR)/*.cpp)
MSP_LAYER_SRC  = $(wildcard $(MSP_LAYER_DIR)/*.cpp)
MCU_LAYER_SRC  = $(wildcard $(MCU_LAYER_DIR)/*.c)

VTX_LAYER_OBJS  = $(addprefix $(BUILD_DIR)/vtx/,$(notdir $(VTX_LAYER_SRC:.cpp=.o)))
BSP_LAYER_OBJS  = $(addprefix $(BUILD_DIR)/bsp/,$(notdir $(BSP_LAYER_SRC:.cpp=.o)))
CHIP_LAYER_OBJS = $(addprefix $(BUILD_DIR)/chip/,$(notdir $(CHIP_LAYER_SRC:.cpp=.o)))
MSP_LAYER_OBJS  = $(addprefix $(BUILD_DIR)/msp/,$(notdir $(MSP_LAYER_SRC:.cpp=.o)))
MCU_LAYER_OBJS  = $(addprefix $(BUILD_DIR)/mcu/,$(notdir $(MCU_LAYER_SRC:.c=.o)))

OBJECTS = \
	$(VTX_LAYER_OBJS)\
	$(BSP_LAYER_OBJS)\
	$(CHIP_LAYER_OBJS)\
	$(MSP_LAYER_OBJS)\
	$(MCU_LAYER_OBJS)\
	$(ASM_OBJECTS)


ASM_OBJECTS = $(BUILD_DIR)/$(notdir $(ASM_SOURCES:%.s=%.o))

# ASM sources
ASM_SOURCES = ../startup/gcc/startup_at32f421.s

#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
CXX = $(GCC_PATH)/$(PREFIX)g++
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
CXX = $(PREFIX)g++
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = 

# float-abi
FLOAT-ABI = 

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
	-DAT32F421G8U7 \
	-DUSE_STDPERIPH_DRIVER \
	-DAT_START_F421_V1 \
	-DUSE_PA_RFPA5542 \
	-DUSE_RTC6705 \
	-DLED_INDICATION_OF_VTX_MODE=1

# AS includes
AS_INCLUDES = 


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections
CFLAGS += $(MCU) $(C_DEFS) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif

# Generate dependency information
CFLAGS += #-MMD -MP -MF"$(@:%.o=%.d)"

#######################################
# LDFLAGS
#######################################

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections #-u _printf_float
# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin

$(ASM_OBJECTS): $(ASM_SOURCES) | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/vtx/%.o: $(VTX_LAYER_DIR)/%.cpp $(wildcard $(foreach i,$(VTX_LAYER_INCLUDE),$(i)/*.h)) Makefile | $(BUILD_DIR)/vtx
	$(CC) $(CFLAGS) $(foreach i,$(VTX_LAYER_INCLUDE),-I$(i)) -I$(COMMON_INCLUDE) -c $< -o $@

$(BUILD_DIR)/bsp/%.o: $(BSP_LAYER_DIR)/%.cpp $(wildcard $(foreach i,$(BSP_LAYER_INCLUDE),$(i)/*.h)) Makefile | $(BUILD_DIR)/bsp
	$(CC) $(CFLAGS) $(foreach i,$(BSP_LAYER_INCLUDE),-I$(i)) -I$(COMMON_INCLUDE) -c $< -o $@

$(BUILD_DIR)/chip/%.o: $(CHIP_LAYER_DIR)/%.cpp $(wildcard $(foreach i,$(CHIP_LAYER_INCLUDE),$(i)/*.h)) Makefile | $(BUILD_DIR)/chip
	$(CC) $(CFLAGS) $(foreach i,$(CHIP_LAYER_INCLUDE),-I$(i)) -I$(COMMON_INCLUDE) -c $< -o $@

$(BUILD_DIR)/msp/%.o: $(MSP_LAYER_DIR)/%.cpp $(wildcard $(foreach i,$(MSP_LAYER_INCLUDE),$(i)/*.h)) Makefile | $(BUILD_DIR)/msp
	$(CC) $(CFLAGS) $(foreach i,$(MSP_LAYER_INCLUDE),-I$(i)) -I$(COMMON_INCLUDE) -c $< -o $@

$(BUILD_DIR)/mcu/%.o: $(MCU_LAYER_DIR)/%.c $(wildcard $(foreach i,$(MCU_LAYER_INCLUDE),$(i)/*.h)) Makefile | $(BUILD_DIR)/mcu
	$(CC) $(CFLAGS) $(foreach i,$(MCU_LAYER_INCLUDE),-I$(i)) -I$(COMMON_INCLUDE) -c $< -o $@

#######################################
# build the application
#######################################
# list of objects

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile | $(BUILD_DIR)
	$(CXX) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR) $(BUILD_DIR)/vtx $(BUILD_DIR)/bsp $(BUILD_DIR)/chip $(BUILD_DIR)/msp $(BUILD_DIR)/mcu:
	mkdir -p $@

#######################################
# clean up
#######################################
clean:
	-rm -rf $(BUILD_DIR)

#######################################
# download to mcu
#######################################
download: $(BUILD_DIR)/$(TARGET).hex
	@echo start flashing......
	@bash $(DOWNLOAD_SCRIP) $(MCU_FLY) $(BUILD_DIR)/$(TARGET).hex
  
#######################################
# dependencies
#######################################
#-include $(wildcard $(BUILD_DIR)/*.d)
